
Embedded-Temperature-Controlling-System.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001c2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000004  00800060  00800060  00000236  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 82 00 	jmp	0x104	; 0x104 <__vector_10>
  2c:	0c 94 af 00 	jmp	0x15e	; 0x15e <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a4 36       	cpi	r26, 0x64	; 100
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <main>
  74:	0c 94 df 00 	jmp	0x1be	; 0x1be <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <TIMER0_setCallBackCompareMode>:
  7c:	90 93 63 00 	sts	0x0063, r25
  80:	80 93 62 00 	sts	0x0062, r24
  84:	08 95       	ret

00000086 <TIMER0_setCallBackOverflowMode>:
  86:	90 93 61 00 	sts	0x0061, r25
  8a:	80 93 60 00 	sts	0x0060, r24
  8e:	08 95       	ret

00000090 <TIMER0_init>:
  90:	fc 01       	movw	r30, r24
  92:	90 81       	ld	r25, Z
  94:	21 81       	ldd	r18, Z+1	; 0x01
  96:	82 2f       	mov	r24, r18
  98:	82 95       	swap	r24
  9a:	80 7f       	andi	r24, 0xF0	; 240
  9c:	89 2b       	or	r24, r25
  9e:	83 bf       	out	0x33, r24	; 51
  a0:	85 81       	ldd	r24, Z+5	; 0x05
  a2:	82 bf       	out	0x32, r24	; 50
  a4:	86 81       	ldd	r24, Z+6	; 0x06
  a6:	8c bf       	out	0x3c, r24	; 60
  a8:	99 23       	and	r25, r25
  aa:	11 f0       	breq	.+4      	; 0xb0 <TIMER0_init+0x20>
  ac:	98 30       	cpi	r25, 0x08	; 8
  ae:	19 f4       	brne	.+6      	; 0xb6 <TIMER0_init+0x26>
  b0:	83 b7       	in	r24, 0x33	; 51
  b2:	80 68       	ori	r24, 0x80	; 128
  b4:	02 c0       	rjmp	.+4      	; 0xba <TIMER0_init+0x2a>
  b6:	83 b7       	in	r24, 0x33	; 51
  b8:	8f 77       	andi	r24, 0x7F	; 127
  ba:	83 bf       	out	0x33, r24	; 51
  bc:	22 23       	and	r18, r18
  be:	11 f0       	breq	.+4      	; 0xc4 <TIMER0_init+0x34>
  c0:	bb 9a       	sbi	0x17, 3	; 23
  c2:	c3 98       	cbi	0x18, 3	; 24
  c4:	99 b7       	in	r25, 0x39	; 57
  c6:	84 81       	ldd	r24, Z+4	; 0x04
  c8:	98 2b       	or	r25, r24
  ca:	83 81       	ldd	r24, Z+3	; 0x03
  cc:	88 0f       	add	r24, r24
  ce:	89 2b       	or	r24, r25
  d0:	89 bf       	out	0x39, r24	; 57
  d2:	83 b7       	in	r24, 0x33	; 51
  d4:	92 81       	ldd	r25, Z+2	; 0x02
  d6:	89 2b       	or	r24, r25
  d8:	83 bf       	out	0x33, r24	; 51
  da:	8f b7       	in	r24, 0x3f	; 63
  dc:	80 68       	ori	r24, 0x80	; 128
  de:	8f bf       	out	0x3f, r24	; 63
  e0:	08 95       	ret

000000e2 <TIMER0_start>:
  e2:	93 b7       	in	r25, 0x33	; 51
  e4:	98 2b       	or	r25, r24
  e6:	93 bf       	out	0x33, r25	; 51
  e8:	62 bf       	out	0x32, r22	; 50
  ea:	08 95       	ret

000000ec <TIMER0_setCompareValue>:
  ec:	8c bf       	out	0x3c, r24	; 60
  ee:	08 95       	ret

000000f0 <TIMER0_stop>:
  f0:	83 b7       	in	r24, 0x33	; 51
  f2:	8d 7f       	andi	r24, 0xFD	; 253
  f4:	83 bf       	out	0x33, r24	; 51
  f6:	83 b7       	in	r24, 0x33	; 51
  f8:	8b 7f       	andi	r24, 0xFB	; 251
  fa:	83 bf       	out	0x33, r24	; 51
  fc:	83 b7       	in	r24, 0x33	; 51
  fe:	8b 7f       	andi	r24, 0xFB	; 251
 100:	83 bf       	out	0x33, r24	; 51
 102:	08 95       	ret

00000104 <__vector_10>:
 104:	1f 92       	push	r1
 106:	0f 92       	push	r0
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	0f 92       	push	r0
 10c:	11 24       	eor	r1, r1
 10e:	2f 93       	push	r18
 110:	3f 93       	push	r19
 112:	4f 93       	push	r20
 114:	5f 93       	push	r21
 116:	6f 93       	push	r22
 118:	7f 93       	push	r23
 11a:	8f 93       	push	r24
 11c:	9f 93       	push	r25
 11e:	af 93       	push	r26
 120:	bf 93       	push	r27
 122:	ef 93       	push	r30
 124:	ff 93       	push	r31
 126:	80 91 62 00 	lds	r24, 0x0062
 12a:	90 91 63 00 	lds	r25, 0x0063
 12e:	89 2b       	or	r24, r25
 130:	29 f0       	breq	.+10     	; 0x13c <__vector_10+0x38>
 132:	e0 91 62 00 	lds	r30, 0x0062
 136:	f0 91 63 00 	lds	r31, 0x0063
 13a:	09 95       	icall
 13c:	ff 91       	pop	r31
 13e:	ef 91       	pop	r30
 140:	bf 91       	pop	r27
 142:	af 91       	pop	r26
 144:	9f 91       	pop	r25
 146:	8f 91       	pop	r24
 148:	7f 91       	pop	r23
 14a:	6f 91       	pop	r22
 14c:	5f 91       	pop	r21
 14e:	4f 91       	pop	r20
 150:	3f 91       	pop	r19
 152:	2f 91       	pop	r18
 154:	0f 90       	pop	r0
 156:	0f be       	out	0x3f, r0	; 63
 158:	0f 90       	pop	r0
 15a:	1f 90       	pop	r1
 15c:	18 95       	reti

0000015e <__vector_11>:
 15e:	1f 92       	push	r1
 160:	0f 92       	push	r0
 162:	0f b6       	in	r0, 0x3f	; 63
 164:	0f 92       	push	r0
 166:	11 24       	eor	r1, r1
 168:	2f 93       	push	r18
 16a:	3f 93       	push	r19
 16c:	4f 93       	push	r20
 16e:	5f 93       	push	r21
 170:	6f 93       	push	r22
 172:	7f 93       	push	r23
 174:	8f 93       	push	r24
 176:	9f 93       	push	r25
 178:	af 93       	push	r26
 17a:	bf 93       	push	r27
 17c:	ef 93       	push	r30
 17e:	ff 93       	push	r31
 180:	80 91 60 00 	lds	r24, 0x0060
 184:	90 91 61 00 	lds	r25, 0x0061
 188:	89 2b       	or	r24, r25
 18a:	29 f0       	breq	.+10     	; 0x196 <__vector_11+0x38>
 18c:	e0 91 60 00 	lds	r30, 0x0060
 190:	f0 91 61 00 	lds	r31, 0x0061
 194:	09 95       	icall
 196:	ff 91       	pop	r31
 198:	ef 91       	pop	r30
 19a:	bf 91       	pop	r27
 19c:	af 91       	pop	r26
 19e:	9f 91       	pop	r25
 1a0:	8f 91       	pop	r24
 1a2:	7f 91       	pop	r23
 1a4:	6f 91       	pop	r22
 1a6:	5f 91       	pop	r21
 1a8:	4f 91       	pop	r20
 1aa:	3f 91       	pop	r19
 1ac:	2f 91       	pop	r18
 1ae:	0f 90       	pop	r0
 1b0:	0f be       	out	0x3f, r0	; 63
 1b2:	0f 90       	pop	r0
 1b4:	1f 90       	pop	r1
 1b6:	18 95       	reti

000001b8 <main>:
 1b8:	80 e0       	ldi	r24, 0x00	; 0
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	08 95       	ret

000001be <_exit>:
 1be:	f8 94       	cli

000001c0 <__stop_program>:
 1c0:	ff cf       	rjmp	.-2      	; 0x1c0 <__stop_program>
